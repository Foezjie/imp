<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "IMP.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-IMP-Introduction">
	<title>Introduction</title>
    <para>IT infrastructures grow larger and more complex because of the
    growing importance of IT in our society. System administrators need to
    manage these infrastructures to ensure it functions correctly with as
    little downtime as possible. This is a growing challenge because of the
    scale, heterogeneity and the rate of change in contemporary IT
    infrastructures; there is no margin for error.</para>

    <para>The complexity of managing IT infrastructures is caused by relations
    and interdependencies between applications, services and subsystems in an
    IT infrastructure. The actual configuration of a real or virtualized
    infrastructure is determined by many parameters, in fact in the order of
    thousands. Only a fraction of these parameters can be chosen freely by
    system administrators. All other parameters are either a duplicate of an
    other parameter or they are derived from other dependent parameters. An
    example stems from IP address allocation: only the last octet of an IP
    address can be freely chosen between 1 and 254 in a class C network, the
    other three octets are dependant on the network address.  The entire set of
    managed parameters and their interdependencies result in a complex
    configuration parameter space which is in practice controlled by system
    administrators.  Whenever a configuration parameter changes, operators need
    to ensure all dependent configuration parameters are also updated.
    Unfortunately, often not all configuration parameters are updated correctly
    resulting in inconsistent parameters in the infrastructure which leads to
    service failure. Research has revealed that configuration errors are a big
    contributor to service failure and mean time to recovery.</para>

    <para>Configuration management tools assist system administrator in
    automating the configuration management of their infrastructures.
    Configuration management tools are generic tools to configure and manage an
    infrastructure or application. These tools are developed to replace custom
    scripts that are used in all production infrastructures, because custom
    scripts or often ad-hoc and hard to maintain. IMP is inspired by the
    observation that the current state-of-the-art tools do not operate at a
    high enough abstraction level to manage an entire infrastructure.  Other
    tools manage an infrastructure platform in function of primitive operating
    system resources such as files, services, packages and users. The current
    state of the art in these tools provide mechanisms to encapsulate
    complexity and heterogeneity and thus raising the abstraction level, but
    they are limited to a single host abstractions. To cope with these
    deficiencies operators resort again to custom scripting, to manage an
    entire infrastructure with configuration management tools.</para>

    <para>Cloud computing such as IaaS has increased this complexity, although
    it adds additional layers of abstraction to provide homogeneous virtual
    machines on heterogeneous systems. One of the key advantages of IaaS is pay
    as you go. But this also means that an infrastructure is no longer static
    but constantly needs to scale up and down. This fact requires full
    automation of the configuration and the management of the IT
    infrastructure.</para>

    <para>This book is a guido to our Infrastructure Management Platform (IMP).
    IMP manages an infrastructure in an integrated fashion. It realizes this
    integration by providing the support to model all relevant relations
    between configuration parameters. These relations ensure that every
    configuration parameter is only specified once in the configuration. All
    duplicated or derived configuration parameters are specified using
    relations. IMP focusses on the following to achieve this:
    <itemizedlist>
        <listitem><para>A powerful modelling language to capture all relevant
        relations between infrastructure parameters at all layers in the
        configuration and encapsulating them in reusable configuration modules.
        Configuration modules provide a domain model and implementations for
        domain concepts. The entire configuration model represents the desired
        state of each parameter in the infrastructure.</para></listitem>
 
        <listitem><para>An architecture which is Extensible with transformation
        and export plug-ins. Transformation plug-ins enable parameter
        manipulation in an imperative programming language, enabling complex
        configuration models while keeping the core modelling language concise.
        Export plug-ins provide a connection to management interfaces of
        applications and services and a connection to existing tools. It
        ensures that IMP can leverage on existing interfaces and tools to
        deploy configuration changes.</para></listitem>
    </itemizedlist></para>
    
</chapter>
